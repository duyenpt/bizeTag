@mixin border-radius($value){
  -webkit-border-radius: $value;
  -moz-border-radius: $value;
  -ms-border-radius: $value;
  border-radius: $value;
}

@mixin box-shadow($value){
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  -ms-box-shadow: $value;
  box-shadow: $value;
}
//first we'll define the folder where the sprites are and their layout
$icons: sprite-map("sprites/*.png", $layout: smart) !default;
$sprite-high-res-suffix: '-2x' !default;

//Sprite mixin, works perfectly with standard defines
@mixin use-sprite($sprite, $sprite-retina: false, $sprite-map: $icons) {
  $sprite-high-res: #{$sprite}#{$sprite-high-res-suffix};
  background-image: sprite-url($sprite-map);
  background-position: sprite-position($sprite-map, $sprite);
  background-repeat: no-repeat;
  overflow: hidden;
  height: image-height(sprite-file($sprite-map, $sprite));
  width: image-width(sprite-file($sprite-map, $sprite));
  display: inline-block;

  @if $sprite-retina {
    @media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 3/2), (min--moz-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 144dppx) {

      background-size: (image-width(sprite-path($sprite-map)) / 2) (image-height(sprite-path($sprite-map)) / 2);
      background-position: round(nth(sprite-position($sprite-map, $sprite-high-res), 1) / 2) round(nth(sprite-position($sprite-map, $sprite-high-res), 2) / 2);
      height: image-height(sprite-file($sprite-map, $sprite));
      width: image-width(sprite-file($sprite-map, $sprite));
    }
  }

}